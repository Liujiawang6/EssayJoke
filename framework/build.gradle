apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'android-aspectjx' // apply plugin

kapt {
    generateStubs = true
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.common.compileSdkVersion
    buildToolsVersion rootProject.ext.common.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.common.minSdkVersion
        targetSdkVersion rootProject.ext.common.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //分包
        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni', 'src/main/cpp/']
            jniLibs.srcDirs = ['libs']  //配置生成jniLibs
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$support_test_espresso_espresso_core_version", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    api "android.arch.lifecycle:runtime:$lifecycle_runtime_version"
    api "android.arch.lifecycle:extensions:$lifecycle_extensions_version"
    api "android.arch.persistence.room:runtime:$room_runtime_version"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_compiler_version"

    api "com.android.support:appcompat-v7:$appcompat_v7_version"
    api "com.android.support:cardview-v7:${appcompat_v7_version}"
    api "com.android.support:support-v4:${appcompat_v7_version}"
    api "com.android.support:design:${android_support_version}"

    testImplementation "junit:junit:$junit_version"

    //分包
    api "com.android.support:multidex:$support_multidex_version"

    //Dagger2
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //依赖anko框架 kotlin扩展
    api "org.jetbrains.anko:anko:$anko_version"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //ARouter
    api "com.alibaba:arouter-api:$arouter_api_version"
    annotationProcessor "com.alibaba:arouter-compiler:$arouter_compiler_version"

    //Circle ImageView
    api "de.hdodenhof:circleimageview:${circle_imageView_version}"
    //Take Photo
    api "com.jph.takephoto:takephoto_library:${take_photo_version}"
    //Alert View
    api "com.bigkoo:alertview:${alert_view_version}"
    //七牛
    api 'com.qiniu:qiniu-android-sdk:7.3.+'
    
    //底部导航栏
    api "com.ashokvarma.android:bottom-navigation-bar:$bottom_navigation_bar_version"
    //banner
    api "com.youth.banner:banner:$banner_version"
    //带三角形角标的View
    api "com.github.shts:TriangleLabelView:$triangleLabelView_version"
    //画廊
    api "com.github.crosswall:Android-Coverflow:$android_coverflow_version"
    //上下拉刷新
    api "cn.bingoogolapple:bga-refreshlayout:$bga_refreshlayout_version"
    
    //Kotlin RxBus
    api "com.eightbitlab:rxbus:1.0.2"

    //leakCanary
    debugApi 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    // Optional, if you use support library fragments:
    debugApi 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'

    //blockCanary
    api 'com.github.markzhai:blockcanary-android:1.5.0'
    debugApi 'com.github.markzhai:blockcanary-android:1.5.0'
    releaseApi 'com.github.markzhai:blockcanary-no-op:1.5.0'

    api project(':SDK')
    api project(':Resource')
    api project(':MallApp:MallResource')
}

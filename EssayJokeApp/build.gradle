apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.common.compileSdkVersion
    buildToolsVersion rootProject.ext.common.buildToolsVersion
    defaultConfig {
        applicationId "com.qiyei.essayjoke"
        minSdkVersion rootProject.ext.common.minSdkVersion
        targetSdkVersion rootProject.ext.common.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        //分包
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding "UTF-8"
    }

    /**
     * 签名配置
     */
    signingConfigs {
        //正式版签名
        release {
            keyAlias proj_keyAlias
            keyPassword proj_keyPassword
            storeFile file(proj_storeFile)
            storePassword proj_storePassword
        }

        //调试版签名
        debug {

        }
    }

    buildTypes {
        debug {
            // 对齐zip
            zipAlignEnabled  = true
            // 删除无用资源
            shrinkResources  = false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            // 对齐zip
            zipAlignEnabled  = true
            // 删除无用资源
            shrinkResources  = false
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jni.srcDirs = ['src/main/jni', 'src/main/cpp/']
            jniLibs.srcDirs = ['libs']  //配置生成jniLibs
        }
    }
    //解决国际化资源文件不全
    lintOptions{
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "com.makeramen:roundedimageview:2.2.1"
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.multidex:multidex:2.0.1"

    implementation project(':Framework:Framework')

    testImplementation "junit:junit:4.12"
    androidTestImplementation "androidx.test:runner:1.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.2.0"
}

def releaseTime() {
    // return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC")) //年月日
    return new Date().format("yyyy-MM-dd-HH-mm-ss", TimeZone.getTimeZone("GMT+8:00")) //年月日时分秒
}

android.applicationVariants.all { variant ->
    //如果是release版本
    if (variant.buildType.name == 'release') {
        variant.outputs.all{ output ->
            //查找所有的apk
            if (outputFileName.endsWith('.apk')) {
                def index = outputFileName.indexOf(".")
                def prefix = outputFileName.substring(0,index)
                def suffix = outputFileName.substring(index)
                //重新定义apk的名称: 工程名 + 版本号 + 生成时间
                def fileName = prefix + "_V${android.defaultConfig.versionName}_${releaseTime()}" + suffix
                //outputFile.parent参数可以改成你你想要的发布路径
                outputFileName = fileName
            }
        }
    }
}
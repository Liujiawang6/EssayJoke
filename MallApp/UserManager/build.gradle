if (isMallLibrary.toBoolean()) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.common.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.common.minSdkVersion
        targetSdkVersion rootProject.ext.common.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            if (isMallLibrary.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //全部Module一起编译的时候剔除debug目录
                    exclude '**/module/**'
                }
                resources.srcDirs = ['src/main/res']//指定source目录
                res.srcDirs = ['src/main/res']//指定资源目录
            } else {
                manifest.srcFile 'src/debug/AndroidManifest.xml'
                java.srcDirs = ['src/debug/java', 'src/main/java']
                resources.srcDirs = ['src/debug/res', 'src/main/res']//指定source目录
                res.srcDirs = ['src/debug/res', 'src/main/res']//指定资源目录
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:$appcompat_v7_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$support_test_runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$support_test_espresso_espresso_core_version"
    //Dagger2
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    //ARouter
    kapt "com.alibaba:arouter-compiler:$arouter_compiler_version"
    api project(':Framework:Provider')

    api project(':Framework:Framework')
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
